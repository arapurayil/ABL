# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Check URLs
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: URL
        uses: urlstechie/urlchecker-action@0.1.9
        continue-on-error: true
        with:
          subfolder: sources
          file_types: .json
          retry_count: 3
          cleanup: false
      - name: Black Code Formatter
        uses: lgeiger/black-action@v1.0.1
        with:
          args: .
      - run: |
          if ! git diff --no-ext-diff --quiet --exit-code; then
            git add '*.py'
            git commit -S -a -m "Blackened code"
            git push
          fi
      - name: Set up GPG and Git
        run: |
          echo "${{ secrets.bot_gpg_pvt }}" > private.key
          gpg --import private.key
          rm private.key
          git config --global user.name ${{ secrets.bot_name }}
          git config --global user.email ${{ secrets.bot_email }}
          git config --global user.signingkey ${{ secrets.bot_gpg_id }}
          git config --global push.followTags true
      - name: Setup Python
        uses: actions/setup-python@v1.2.0
        with:
          python-version: '3.8'
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate and Commit
        run: |
          python generator/main.py
          if ! git diff --no-ext-diff --quiet --exit-code; then
            git add --all
            git commit -S -a -m "Bumped version to v$(<version.txt)"
            git tag -a v$(<version.txt) -m "version $(<version.txt)"
            rm version.txt
            git push
          fi
